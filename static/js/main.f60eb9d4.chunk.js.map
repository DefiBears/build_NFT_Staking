{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","components/CustomModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","stakingContract","web3","errorMsg","blockchainReducer","state","action","type","payload","nftTokens","depositNFTs","cost","accumulatedReward","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","getNFTInfoFromURI","uri","a","fetch","nftResponse","json","nft","fetchNFTsWithID","tokenIds","getState","Promise","all","map","tokenId","methods","tokenURI","call","tokenURIs","fetchData","address","dispatch","NFTsOfOwner","depositsOf","deposits","reduce","sum","calculateReward","name","replace","reward","isDeposited","console","log","connectFailed","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextTitle2","TextSubTitle","TextDescription","CloseButton","span","CustomModal","isActive","title","children","confirmButton","onConfirm","closeModal","className","onClick","imgUrl","ipfsPath","StyledButton","button","ResponsiveWrapper","FlexContainer","FlexContainer2","StyledCard","StyledLogo","img","StyledImg","isSqure","StyledIcon","StyledDiv","App","useDispatch","useSelector","React","useState","approved","setApproved","TotalReward","setTR","setRR","modalIsOpen","setIsOpen","estimatedReward","setEstimatedReward","setNFT","nfts","CONTRACT_ADDRESS","STAKING_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","headers","Accept","configResponse","config","useEffect","handleClickNFT","handleClickRefresh","TotalRewards","TRs","Deposit","id","deposit","send","to","from","once","err","then","receipt","Withdraw","withdraw","isApprovedForAll","isApproved","TR","rate","RR","src","style","width","e","preventDefault","attributes","attribute","trait_type","value","padding","backgroundColor","href","target","rel","alt","borderRadius","background","boxShadow","textAlign","color","abiResponse","abi2Response","abi","abi2","web3Modal","Web3Modal","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getChainId","networkId","getAccounts","accounts","SmartContractObj","StakingContractObj","on","chainId","window","location","reload","join","disabled","setApprovalForAll","DepositAllNfts","withdrawAllNFTs","claimAllRewards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f60eb9d4.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  stakingContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        stakingContract: action.payload.stakingContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  nftTokens: [],\n  depositNFTs: [],\n  cost: 0,\n  accumulatedReward: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        nftTokens: action.payload.nftTokens,\n        depositNFTs: action.payload.depositNFTs,\n        accumulatedReward: action.payload.accumulatedReward,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nconst getNFTInfoFromURI = async (uri) => {\n  const nftResponse = await fetch(uri);\n  const nft = await nftResponse.json();\n  return nft;\n};\n\nexport const fetchNFTsWithID = async (tokenIds) => {\n  const { blockchain } = store.getState();\n  const tokenURIs = await Promise.all(\n    tokenIds.map((tokenId) =>\n      blockchain.smartContract.methods.tokenURI(tokenId).call()\n    )\n  );\n\n  return await Promise.all(tokenURIs.map((uri) => getNFTInfoFromURI(uri)));\n};\n\nexport const fetchData = (address) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      const { blockchain } = store.getState();\n      let tokenIds = await blockchain.smartContract.methods\n        .NFTsOfOwner(address)\n        .call();\n\n      const deposits = await blockchain.stakingContract.methods\n        .depositsOf(blockchain.account)\n        .call();\n\n      let depositNFTs = await fetchNFTsWithID(deposits);\n\n      const accumulatedReward = await depositNFTs.reduce(async (sum, nft) => {\n        try {\n          const reward = await blockchain.stakingContract.methods\n            .calculateReward(blockchain.account, nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'))\n            .call();\n          return sum + reward;\n        } catch (error) {\n          return sum;\n        }\n      }, 0);\n\n      depositNFTs = depositNFTs.map((nft) => ({ ...nft, isDeposited: true }));\n\n      const nftTokens = await fetchNFTsWithID(tokenIds);\n\n      dispatch(\n        fetchDataSuccess({\n          nftTokens,\n          depositNFTs,\n          accumulatedReward,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n\n    options: {\n      // Mikko's test key - don't copy as your mileage may vary\n      infuraId: \"8043bb2cf99347b1bfadfb233c5325c0\",\n      rpc: {\n        56: \"https://bsc-dataseed.binance.org/\",\n        97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n      },\n    },\n  },\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi2Response = await fetch(\"/config/abi2.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const abi2 = await abi2Response.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n\n    let web3Modal = new Web3Modal({\n      cacheProvider: false, // optional\n      providerOptions, // required\n      // disableInjectedProvider: true, // optional. For MetaMask / Brave / Opera.\n    });\n    let provider;\n    try {\n      provider = await web3Modal.connect();\n    } catch (e) {\n      console.log(\"Could not get a wallet connection\", e);\n      return;\n    }\n\n    const web3 = new Web3(provider);\n\n    Web3EthContract.setProvider(provider);\n    try {\n      const networkId = await web3.eth.getChainId();\n      const accounts = await web3.eth.getAccounts();\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n\n        const StakingContractObj = new Web3EthContract(\n          abi2,\n          CONFIG.STAKING_ADDRESS\n        );\n\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            stakingContract: StakingContractObj,\n            web3: web3,\n          })\n        );\n\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n\n        // Subscribe to chainId change\n        provider.on(\"chainChanged\", (chainId) => {\n          window.location.reload();\n        });\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      dispatch(connectFailed(\"Something went wrong.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextTitle2 = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 32px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const CloseButton = styled.span`\n  color: #aaaaaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport default function CustomModal({\n  isActive,\n  title,\n  children,\n  confirmButton,\n  onConfirm,\n  closeModal,\n}) {\n  return (\n    <div\n      className={`modal fixed w-full h-full top-0 left-0 flex items-center justify-center transition-opacity duration-300 ${\n        isActive\n          ? \"overflow-x-hidden overflow-y-visible\"\n          : \"opacity-0 pointer-events-none\"\n      }`}\n    >\n      <div\n        className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"\n        aria-hidden=\"true\"\n        onClick={closeModal}\n      />\n      <div className=\"relative modal-container bg-white w-5/12 md:max-w-xl mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n        <div className=\"modal-content py-5 text-left px-6\">\n          <div className=\"flex justify-between items-center pb-3\">\n            <p className=\"ml-3 text-2xl font-bold text-gray-700\">{title}</p>\n          </div>\n          <div className=\"px-5 py-3 text-gray-700\">{children}</div>\n          <div className=\"text-right mt-5\">\n            {typeof confirmButton === \"string\" ? (\n              <button\n                className=\"bg-green-500 px-4 py-2 font-bold rounded text-white hover:bg-green-600\"\n                type=\"button\"\n                onClick={onConfirm}\n              >\n                {confirmButton}\n              </button>\n            ) : (\n              confirmButton\n            )}\n          </div>\n        </div>\n        <CloseButton\n          onClick={closeModal}\n          className=\"absolute top-0 right-0 mr-4 mt-2 text-gray-600 text-3xl hover:text-gray-700 cursor-pointer\"\n        >\n          &times;\n        </CloseButton>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData, fetchNFTsWithID } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport CustomModal from \"./components/CustomModal\";\nimport styled from \"styled-components\";\nimport { Price } from \"./Price\";\n\nconst imgUrl = (ipfsPath) =>\n  ipfsPath.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: var(--accent);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--accent-text);\n  width: 160px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: column;\n  justify-content: stretched;\n  // align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-content: center;\n  width: 70%;\n`;\n\nexport const FlexContainer2 = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-content: center;\n  width: 100%;\n`;\n\nexport const StyledCard = styled.div`\n  color: white;\n  width: 30%;\n  margin: 10px;\n  text-align: center;\n  line-height: 75px;\n\n  @media (max-width: 768px) {\n    width: 40%;\n  }\n\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px var(--secondary);\n  background-color: var(--accent);\n  border-radius: ${({ isSqure }) => (isSqure ? 0 : \"100%\")};\n  width: 180px;\n  max-width: 90%;\n  @media (min-width: 900px) {\n    width: 200px;\n  }\n  @media (min-width: 1000px) {\n    width: 350px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n`;\n\nexport const StyledDiv = styled.div`\n  border: 4px solid var(--secondary);\n  margin: 12px 0;\n  padding: 4px;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const [approved, setApproved] = React.useState(false);\n  const [TotalReward, setTR] = useState(0);\n  const [RewRate, setRR] = useState(0);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [estimatedReward, setEstimatedReward] = React.useState(0);\n  const [nft, setNFT] = React.useState(null);\n  const accumulatedReward = useSelector(\n    (state) => state.data.accumulatedReward\n  );\n\n  const depositNFTs = useSelector((state) => state.data.depositNFTs);\n  const nfts = useSelector((state) => state.data.nftTokens);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    STAKING_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const price = <Price/>;\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const handleClickNFT = async (nft) => {\n    if (nft.isDeposited) {\n      try {\n        const accumulatedReward = await blockchain.stakingContract.methods\n          .calculateReward(blockchain.account, nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'))\n          .call();\n        setEstimatedReward(accumulatedReward);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    else {\n      try {setEstimatedReward(0);\n      }\n      catch (error) {\n        console.log(error)\n      }\n    }\n\n    setNFT(nft);\n    setIsOpen(true);\n  };\n\n  const handleClickRefresh = async() =>{\n      if (blockchain.account !== \"\" && blockchain.stakingContract !== null) {\n        const TRs = await blockchain.stakingContract.methods\n          .TotalRewards(blockchain.account)\n          .call();\n        setTR(TRs);\n      }\n\n  }\n\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const ApproveForAll = () => {\n    blockchain.smartContract.methods\n      .setApprovalForAll(CONFIG.STAKING_ADDRESS, 1)\n      .send({\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const Deposit = async (id) => {\n    await blockchain.stakingContract.methods.deposit([id])\n      .send({\n        to: CONFIG.STAKING_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        setIsOpen(false);\n      });\n  };\n\n  const Withdraw = async (id) => {\n    await blockchain.stakingContract.methods\n      .withdraw([id])\n      .send({\n        to: CONFIG.STAKING_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        setIsOpen(false);\n      });\n  };\n\n  const DepositAll = () => {\n    blockchain.stakingContract.methods\n      .DepositAllNfts()\n      .send({\n        to: CONFIG.STAKING_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const WithdrawAll = () => {\n    blockchain.stakingContract.methods\n      .withdrawAllNFTs()\n      .send({\n        to: CONFIG.STAKING_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n\n  const ClaimAll = () => {\n    blockchain.stakingContract.methods\n      .claimAllRewards()\n      .send({\n        to: CONFIG.STAKING_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  useEffect(async () => {\n    if (blockchain.account !== \"\" && blockchain.stakingContract !== null) {\n      const isApproved = await blockchain.smartContract.methods\n        .isApprovedForAll(blockchain.account, CONFIG.STAKING_ADDRESS)\n        .call();\n      setApproved(isApproved);\n    }\n  }, [blockchain]);\n\n  \n  useEffect(async () => {\n    if (blockchain.account !== \"\" && blockchain.stakingContract !== null) {\n      const TR = await blockchain.stakingContract.methods\n        .TotalRewards(blockchain.account)\n        .call();\n      setTR(TR);\n    }\n  }, [blockchain]);\n\n  useEffect(async () => {\n    if (blockchain.account !== \"\" && blockchain.stakingContract !== null) {\n      const RR = await blockchain.stakingContract.methods\n        .rate()\n        .call();\n      setRR(RR);\n    }\n  }, [blockchain]);\n\n\n  return (\n    <s.Screen>\n      <CustomModal\n        isActive={modalIsOpen}\n        title={nft?.name}\n        closeModal={closeModal}\n      >\n        {nft && (\n          <div>\n            <FlexContainer2>\n              <StyledImg src={imgUrl(nft.image)} isSqure={true} style={{width:\"50%\"}} />\n              </FlexContainer2>\n              <s.SpacerSmall/>\n              <s.Container ai={\"center\"} jc={\"center\"}>\n              {nft.isDeposited ? (\n                    <StyledButton\n                      onClick={async (e) => {\n                        e.preventDefault();\n                        await Withdraw(nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\n                        getData();\n                      }}\n                    >\n                      Withdraw\n                    </StyledButton>\n                  ) : (\n                    <StyledButton\n                      onClick={async (e) => {\n                        e.preventDefault();\n                        await Deposit(nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1'));\n                        getData();\n                      }}\n                    >\n                      Deposit\n                    </StyledButton>\n                  )}\n                  </s.Container>\n              <StyledDiv>\n                    Estimated Reward : {estimatedReward}\n            </StyledDiv>\n\n            <StyledDiv>\n              <p>Name: {nft.name}</p>\n              <p>ID: {nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1')}</p>\n            </StyledDiv>\n            <StyledDiv>\n              {nft.attributes.map((attribute) => (\n                <s.TextSubTitle>\n                  {attribute.trait_type}: {attribute.value}\n                </s.TextSubTitle>\n              ))}\n            </StyledDiv>\n          </div>\n        )}\n      </CustomModal>\n\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--yellow)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <a href=\"https://defibears.co.uk\" target=\"_blank\" rel=\"noreferrer noopener\">\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo512.png\"} />\n        </a>\n        <s.SpacerLarge />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            ai={\"center\"}\n            style={{\n              padding: 20,\n              borderRadius: 24,\n              background: \"var(--box)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <>\n              {blockchain.account === \"\" ||\n              blockchain.smartContract === null ? (\n                <s.Container ai={\"center\"} jc={\"center\"}>\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent)\",\n                    }}\n                  >\n                    Connect to the {CONFIG.NETWORK.NAME} network\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledButton\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(connect());\n                    }}\n                  >\n                    CONNECT\n                  </StyledButton>\n                  {blockchain.errorMsg !== \"\" ? (\n                    <>\n                      <s.SpacerSmall />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent)\",\n                        }}\n                      >\n                        {blockchain.errorMsg}\n                      </s.TextDescription>\n                    </>\n                  ) : null}\n                </s.Container>\n              ) : (\n                <>\n                  <s.SpacerSmall />\n                  <ResponsiveWrapper>\n                    <s.TextDescription>\n                      Connected wallet : {blockchain.account}\n                    </s.TextDescription>\n                  </ResponsiveWrapper>\n                  <ResponsiveWrapper>\n                    <s.TextTitle>\n                      Deposited NFT IDs :{\" \"}\n                      [{depositNFTs.map((nft) => nft.name.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1')).join(\", \")}]\n                    </s.TextTitle>\n                  </ResponsiveWrapper>\n                  <ResponsiveWrapper>\n                    <s.TextTitle>\n                    Total Rewards :&nbsp;{TotalReward/10**18}\n                    </s.TextTitle>\n                    <StyledIcon src={\"/config/images/refresh32.png\"}\n                        onClick={() => {\n                          handleClickRefresh();\n                          getData();\n                        }}\n                      >\n                      </StyledIcon>\n                      </ResponsiveWrapper>\n                      <ResponsiveWrapper>\n\n                        {/*\n                    <s.TextTitle>\n                      Governance token reward for a week from single NFT :{\" \"} {7*28800*RewRate/10**18}\n                    </s.TextTitle>\n                    </ResponsiveWrapper>\n                      <ResponsiveWrapper>\n                    <s.TextTitle>\n                      APR % based on MintPrice :{price}\n                    </s.TextTitle>\n                      */}\n\n                  </ResponsiveWrapper>\n                  <s.SpacerSmall />\n                  <ResponsiveWrapper>\n                    {!approved && (\n                      <s.TextTitle>\n                        You have to Approve Staking Once before staking your\n                        NFTs.\n                      </s.TextTitle>\n                    )}\n                  </ResponsiveWrapper>\n                  <s.SpacerSmall />\n                  <ResponsiveWrapper>\n                      <StyledButton\n                      disabled={approved ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          ApproveForAll();\n                          getData();\n                        }}\n                      >\n                        {!approved? \"Approve Staking\" : \"NFT Approved\"}\n                      </StyledButton>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <a href=\"https://\" target=\"_blank\" rel=\"noreferrer noopener\">\n                      <StyledButton>To Mint Page</StyledButton>\n                    </a>\n                  </ResponsiveWrapper>\n                  <s.SpacerSmall />\n                  <ResponsiveWrapper>\n                  <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          DepositAll();\n                          getData();\n                        }}\n                      >\n                        Deposit All NFTs\n                      </StyledButton>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        WithdrawAll();\n                        getData();\n                      }}\n                    >\n                      Withdraw All NFTs  &Claim\n                    </StyledButton>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        ClaimAll();\n                        getData();\n                      }}\n                    >\n                      Claim All Rewards\n                    </StyledButton>\n                  </ResponsiveWrapper>\n\n                  <s.SpacerLarge />\n                  <s.SpacerLarge />\n                  <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n                  <s.TextTitle2>\n                    NFTs in your wallet\n                    </s.TextTitle2>\n                    </s.Container>\n                  <FlexContainer>\n                    {[...nfts].map((nft) => (\n                      <StyledCard onClick={() => handleClickNFT(nft)}>\n                        <StyledImg src={imgUrl(nft.image)} isSqure={true} style={{width:\"80%\"}} />\n                      </StyledCard>\n                    ))}\n                  </FlexContainer>\n                  <s.SpacerLarge />\n                  <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n                  <s.TextTitle2>\n                    Your Deposited NFTs\n                    </s.TextTitle2>\n                    </s.Container>\n                  <FlexContainer>\n                    {[...depositNFTs].map((nft) => (\n                      <StyledCard onClick={() => handleClickNFT(nft)}>\n                        <StyledImg src={imgUrl(nft.image)} isSqure={true} style={{width:\"80%\"}} />\n                      </StyledCard>\n                    ))}\n                  </FlexContainer>\n                  <s.SpacerLarge />\n                </>\n              )}\n            </>\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you're in {CONFIG.NETWORK.NAME} Mainnet\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          ></s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}